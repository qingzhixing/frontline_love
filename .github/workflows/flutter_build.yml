name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.png'
      - '**/*.jpg'

env:
  FLUTTER_VERSION: "3.24.0"
  JAVA_VERSION: "17"
  BUILD_DIR_PREFIX: "build/app/outputs"

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.setup-cache.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate cache key
        id: setup-cache
        run: echo "cache-key=flutter-${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}" >> $GITHUB_OUTPUT

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /tmp/flutter
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Static code analysis
        run: flutter analyze

      - name: Run unit tests
        run: flutter test

      - name: Run integration tests
        if: github.event_name == 'pull_request'
        run: flutter test integration_test/

  build:
    name: Build Artifacts
    needs: test
    strategy:
      matrix:
        platform: [android]
        include:
          - platform: android
            build-cmd: apk
            artifact-path: "build/app/outputs/apk/release/frontline_love-*.apk"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /tmp/flutter
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # ========== 签名关键修改开始 ==========
      - name: Setup config files
        env:
          ENCODED_KEYSTORE: ${{ secrets.ENCODED_KEYSTORE }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          echo "$ENCODED_KEYSTORE" | base64 -di > android/app/keystore.jks
          mkdir -p lib/common/config
          cat > lib/common/config/ignoreConfig.dart <<EOF
          class NetConfig {
            static const CLIENT_ID = "$CLIENT_ID";
            static const CLIENT_SECRET = "$CLIENT_SECRET";
          }
          EOF

      # 密钥库验证
      - name: Validate Keystore
        run: |
          file android/app/keystore.jks | grep "Java KeyStore" || {
            echo "❌ Invalid keystore file";
            exit 1;
          }
          keytool -list -v \
            -keystore android/app/keystore.jks \
            -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
            -alias ${{ secrets.KEY_ALIAS }} || exit 1

      # 构建前清理
      - name: Clean Build Dir
        run: rm -rf build/app/outputs/apk/release/*

      # Gradle配置验证
      - name: Verify Gradle Config
        run: |
          grep "signingConfig signingConfigs.release" android/app/build.gradle || {
            echo "❌ Missing signingConfig in build.gradle";
            exit 1;
          }
      # ========== 签名关键修改结束 ==========

      - name: Set build version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "build-name=$VERSION" >> $GITHUB_OUTPUT
            echo "build-number=${VERSION//./}" >> $GITHUB_OUTPUT
          else
            DATE=$(date +%Y%m%d)
            echo "build-name=1.0.$DATE.$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
            echo "build-number=$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
          fi

      - name: Build ${{ matrix.platform }}
        run: |
          flutter build ${{ matrix.build-cmd }} \
            --build-name=${{ steps.version.outputs.build-name }} \
            --build-number=${{ steps.version.outputs.build-number }} \
            --release \
            --no-shrink
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Rename APK
        run: |
          mkdir -p build/app/outputs/apk/release
          cp build/app/outputs/apk/release/app-release.apk \
             build/app/outputs/apk/release/frontline_love-${{ steps.version.outputs.build-name }}.apk
          ls -la build/app/outputs/apk/release/frontline_love-*

      # 签名验证
      - name: Verify APK signature
        if: matrix.platform == 'android'
        run: |
          apk_path="build/app/outputs/apk/release/frontline_love-${{ steps.version.outputs.build-name }}.apk"
          sudo apt-get install -y apksigner && \
          apksigner verify --print-certs "$apk_path" | grep -A 5 "Signer #1" || {
            echo "❌ APK签名验证失败";
            exit 1;
          }
          jarsigner -verify -verbose -certs "$apk_path"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: build/app/outputs/apk/release/frontline_love-*.apk
          retention-days: 7

      - name: Check for pre-release
        id: check-pre-release
        run: |
          if echo "${{ github.event.head_commit.message }}" | grep -q '\[pre-release\]'; then
            echo "is-pre-release=true" >> $GITHUB_OUTPUT
          else
            echo "is-pre-release=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pre-Release
        if: steps.check-pre-release.outputs.is-pre-release == 'true' && !startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: "pre-release-${{ steps.version.outputs.build-name }}"
          name: "Pre-Release v${{ steps.version.outputs.build-name }}"
          body: "Automated pre-release build"
          files: build/app/outputs/apk/release/frontline_love-*.apk
          prerelease: true
          draft: false
          make_latest: false

  release:
    name: Create Production Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-build
          path: artifacts

      # 下载后签名验证
      - name: Verify Downloaded APK
        run: |
          sudo apt-get install -y apksigner && \
          apksigner verify --print-certs artifacts/frontline_love-*.apk || {
            echo "❌ 下载的APK签名无效";
            exit 1;
          }

      - name: Extract version tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Flutter Production Release
            Version: ${{ steps.version.outputs.version }}
            Build: ${{ github.run_number }}
          files: artifacts/frontline_love-*.apk
          draft: false
          prerelease: false
          make_latest: true